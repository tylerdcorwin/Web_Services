//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankAccount", Namespace="http://schemas.datacontract.org/2004/07/NEITStoreOrdersService")]
    [System.SerializableAttribute()]
    public partial class BankAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.Accounts[] accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.Accounts[] account {
            get {
                return this.accountField;
            }
            set {
                if ((object.ReferenceEquals(this.accountField, value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountID {
            get {
                return this.accountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.accountIDField, value) != true)) {
                    this.accountIDField = value;
                    this.RaisePropertyChanged("accountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountName {
            get {
                return this.accountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.accountNameField, value) != true)) {
                    this.accountNameField = value;
                    this.RaisePropertyChanged("accountName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Accounts", Namespace="http://schemas.datacontract.org/2004/07/NEITStoreOrdersService")]
    [System.SerializableAttribute()]
    public partial class Accounts : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.Options optionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountType {
            get {
                return this.accountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.accountTypeField, value) != true)) {
                    this.accountTypeField = value;
                    this.RaisePropertyChanged("accountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.Options options {
            get {
                return this.optionsField;
            }
            set {
                if ((object.ReferenceEquals(this.optionsField, value) != true)) {
                    this.optionsField = value;
                    this.RaisePropertyChanged("options");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Options", Namespace="http://schemas.datacontract.org/2004/07/NEITStoreOrdersService")]
    [System.SerializableAttribute()]
    public partial class Options : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreeCheckingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OverDraftProtectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreeChecking {
            get {
                return this.FreeCheckingField;
            }
            set {
                if ((object.ReferenceEquals(this.FreeCheckingField, value) != true)) {
                    this.FreeCheckingField = value;
                    this.RaisePropertyChanged("FreeChecking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OverDraftProtection {
            get {
                return this.OverDraftProtectionField;
            }
            set {
                if ((object.ReferenceEquals(this.OverDraftProtectionField, value) != true)) {
                    this.OverDraftProtectionField = value;
                    this.RaisePropertyChanged("OverDraftProtection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.INEITStoreOrdersService")]
    public interface INEITStoreOrdersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INEITStoreOrdersService/ReturnAmountEarned", ReplyAction="http://tempuri.org/INEITStoreOrdersService/ReturnAmountEarnedResponse")]
        float ReturnAmountEarned(float balance, float interest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INEITStoreOrdersService/ReturnAmountEarned", ReplyAction="http://tempuri.org/INEITStoreOrdersService/ReturnAmountEarnedResponse")]
        System.Threading.Tasks.Task<float> ReturnAmountEarnedAsync(float balance, float interest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INEITStoreOrdersService/GetBankInformation", ReplyAction="http://tempuri.org/INEITStoreOrdersService/GetBankInformationResponse")]
        ConsoleApplication1.ServiceReference1.BankAccount GetBankInformation(string AccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INEITStoreOrdersService/GetBankInformation", ReplyAction="http://tempuri.org/INEITStoreOrdersService/GetBankInformationResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.BankAccount> GetBankInformationAsync(string AccountID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INEITStoreOrdersServiceChannel : ConsoleApplication1.ServiceReference1.INEITStoreOrdersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NEITStoreOrdersServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.INEITStoreOrdersService>, ConsoleApplication1.ServiceReference1.INEITStoreOrdersService {
        
        public NEITStoreOrdersServiceClient() {
        }
        
        public NEITStoreOrdersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NEITStoreOrdersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NEITStoreOrdersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NEITStoreOrdersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public float ReturnAmountEarned(float balance, float interest) {
            return base.Channel.ReturnAmountEarned(balance, interest);
        }
        
        public System.Threading.Tasks.Task<float> ReturnAmountEarnedAsync(float balance, float interest) {
            return base.Channel.ReturnAmountEarnedAsync(balance, interest);
        }
        
        public ConsoleApplication1.ServiceReference1.BankAccount GetBankInformation(string AccountID) {
            return base.Channel.GetBankInformation(AccountID);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.BankAccount> GetBankInformationAsync(string AccountID) {
            return base.Channel.GetBankInformationAsync(AccountID);
        }
    }
}
