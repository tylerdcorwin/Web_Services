//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StateClient.StateService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StateService.IStateExample")]
    public interface IStateExample {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/Initialize", ReplyAction="http://tempuri.org/IStateExample/InitializeResponse")]
        void Initialize(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/Initialize", ReplyAction="http://tempuri.org/IStateExample/InitializeResponse")]
        System.Threading.Tasks.Task InitializeAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/Add", ReplyAction="http://tempuri.org/IStateExample/AddResponse")]
        int Add(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/Add", ReplyAction="http://tempuri.org/IStateExample/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/Multiply", ReplyAction="http://tempuri.org/IStateExample/MultiplyResponse")]
        int Multiply(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/Multiply", ReplyAction="http://tempuri.org/IStateExample/MultiplyResponse")]
        System.Threading.Tasks.Task<int> MultiplyAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/AddTwo", ReplyAction="http://tempuri.org/IStateExample/AddTwoResponse")]
        int AddTwo(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/AddTwo", ReplyAction="http://tempuri.org/IStateExample/AddTwoResponse")]
        System.Threading.Tasks.Task<int> AddTwoAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/MultiplyTwo", ReplyAction="http://tempuri.org/IStateExample/MultiplyTwoResponse")]
        int MultiplyTwo(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStateExample/MultiplyTwo", ReplyAction="http://tempuri.org/IStateExample/MultiplyTwoResponse")]
        System.Threading.Tasks.Task<int> MultiplyTwoAsync(int a);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStateExampleChannel : StateClient.StateService.IStateExample, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StateExampleClient : System.ServiceModel.ClientBase<StateClient.StateService.IStateExample>, StateClient.StateService.IStateExample {
        
        public StateExampleClient() {
        }
        
        public StateExampleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StateExampleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StateExampleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StateExampleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Initialize(int a) {
            base.Channel.Initialize(a);
        }
        
        public System.Threading.Tasks.Task InitializeAsync(int a) {
            return base.Channel.InitializeAsync(a);
        }
        
        public int Add(int a, int b) {
            return base.Channel.Add(a, b);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int a, int b) {
            return base.Channel.AddAsync(a, b);
        }
        
        public int Multiply(int a, int b) {
            return base.Channel.Multiply(a, b);
        }
        
        public System.Threading.Tasks.Task<int> MultiplyAsync(int a, int b) {
            return base.Channel.MultiplyAsync(a, b);
        }
        
        public int AddTwo(int a) {
            return base.Channel.AddTwo(a);
        }
        
        public System.Threading.Tasks.Task<int> AddTwoAsync(int a) {
            return base.Channel.AddTwoAsync(a);
        }
        
        public int MultiplyTwo(int a) {
            return base.Channel.MultiplyTwo(a);
        }
        
        public System.Threading.Tasks.Task<int> MultiplyTwoAsync(int a) {
            return base.Channel.MultiplyTwoAsync(a);
        }
    }
}
